package net.dunice.advancedjavaprojectacademy.tasks.block2;

import java.util.Collection;

/**
 * Для написания задач по данному блоку задач необходимо создать класс и имплементировать данный
 * интерфейс в этом классе, затем переопределить все методы данного интерфейса и решить задачи,
 * затем запустить тесты.
 */
public interface Block2Interface {

    /**
     * Напишите метод, который на вход получает коллекцию объектов,
     * а возвращает коллекцию уже без дубликатов.
     */
    <T> Collection<T> getWithoutDublicates(Collection<T> collection);

    /**
     * Написать метод - итератор по массиву.
     */
    <T> T[]  arrayIterator(T [] array);

    /**
     * Напишите метод, который будет подсчитывать количество цифр «2»,
     * используемых в десятичной записи целых чисел от 0 до n (включительно).
     */
    Integer countNumber(Integer number);

    /**
     * Реализуйте метод, определяющий, является ли одна строка перестановкой другой.
     * Под перестановкой понимаем любое изменение порядка символов.
     * Регистр учитывается, пробелы являются существенными.
     */
    boolean isPermutationStrings(String str1, String str2);

    /**
     * Реализуйте метод сжатия строки на основе счетчика повторяющихся символов.
     * Например, строка aabcccccaaa должна превратиться в а2b1с5аЗ.
     * Если «сжатая» строка оказывается длиннее исходной, метод должен вернуть исходную строку.
     * Найти ПЕРВЫЙ (первое вхождение) наиболее часто повторяющийся в строке символ
     */
    Character getFrequencyCharacter(String source);

    /**
     * Провалидировать строку на закрывающиеся скобки (написать метод).
     */
    boolean isStringValid(String givenString);

    /**
     * Дана строка, содержащая только английские буквы (большие и маленькие). Добавить открывающиеся
     * и закрывающиеся скобки по следующему образцу: "example" -> "(e(x(a(m)p)l)e)" (написать метод).
     */
    String getModifyingString(String noBracketsString);

    /**
     * Дана строка, Вам требуется преобразовать все идущие подряд пробелы в один (написать метод).
     */
    String getValidStringNoSpaces(String string);

    /**
     * Дан массив целых чисел nums. Пара (i,j) называется идентичной, если nums[i] == nums[j] и i < j.
     * Необходимо вычислить количество идентичных пар, реализовав следующий метод на java:
     * public static int numberOfIdenticalPairs(int[] nums) {
     * }
     * Пример: Дано: nums = [4,1,2,4,4,2]
     * Ответ: 4; Объяснение: Здесь 4 идентичные пары (на позициях): (0,3), (0,4), (3,4), (2,5).
     */
    int numberOfIdenticalPairs(int[] nums);

}
